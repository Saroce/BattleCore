//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEffectEntity {

    public Battle.Logic.Effect.Component.EffectSourceComponent effectSource { get { return (Battle.Logic.Effect.Component.EffectSourceComponent)GetComponent(LogicEffectComponentsLookup.EffectSource); } }
    public bool hasEffectSource { get { return HasComponent(LogicEffectComponentsLookup.EffectSource); } }

    public void AddEffectSource(Battle.Common.Constant.EffectSource newValue) {
        var index = LogicEffectComponentsLookup.EffectSource;
        var component = (Battle.Logic.Effect.Component.EffectSourceComponent)CreateComponent(index, typeof(Battle.Logic.Effect.Component.EffectSourceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEffectSource(Battle.Common.Constant.EffectSource newValue) {
        var index = LogicEffectComponentsLookup.EffectSource;
        var component = (Battle.Logic.Effect.Component.EffectSourceComponent)CreateComponent(index, typeof(Battle.Logic.Effect.Component.EffectSourceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEffectSource() {
        RemoveComponent(LogicEffectComponentsLookup.EffectSource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicEffectMatcher {

    static Entitas.IMatcher<LogicEffectEntity> _matcherEffectSource;

    public static Entitas.IMatcher<LogicEffectEntity> EffectSource {
        get {
            if (_matcherEffectSource == null) {
                var matcher = (Entitas.Matcher<LogicEffectEntity>)Entitas.Matcher<LogicEffectEntity>.AllOf(LogicEffectComponentsLookup.EffectSource);
                matcher.componentNames = LogicEffectComponentsLookup.componentNames;
                _matcherEffectSource = matcher;
            }

            return _matcherEffectSource;
        }
    }
}
