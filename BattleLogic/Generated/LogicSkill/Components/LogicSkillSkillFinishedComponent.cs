//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicSkillEntity {

    static readonly Battle.Logic.Skill.Component.Cast.SkillFinishedComponent skillFinishedComponent = new Battle.Logic.Skill.Component.Cast.SkillFinishedComponent();

    public bool isSkillFinished {
        get { return HasComponent(LogicSkillComponentsLookup.SkillFinished); }
        set {
            if (value != isSkillFinished) {
                var index = LogicSkillComponentsLookup.SkillFinished;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : skillFinishedComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicSkillMatcher {

    static Entitas.IMatcher<LogicSkillEntity> _matcherSkillFinished;

    public static Entitas.IMatcher<LogicSkillEntity> SkillFinished {
        get {
            if (_matcherSkillFinished == null) {
                var matcher = (Entitas.Matcher<LogicSkillEntity>)Entitas.Matcher<LogicSkillEntity>.AllOf(LogicSkillComponentsLookup.SkillFinished);
                matcher.componentNames = LogicSkillComponentsLookup.componentNames;
                _matcherSkillFinished = matcher;
            }

            return _matcherSkillFinished;
        }
    }
}
