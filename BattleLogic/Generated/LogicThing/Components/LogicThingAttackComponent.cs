//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicThingEntity {

    public Battle.Logic.Thing.Component.Property.AttackComponent attack { get { return (Battle.Logic.Thing.Component.Property.AttackComponent)GetComponent(LogicThingComponentsLookup.Attack); } }
    public bool hasAttack { get { return HasComponent(LogicThingComponentsLookup.Attack); } }

    public void AddAttack(vFrame.Lockstep.Core.FixedPoint newValue) {
        var index = LogicThingComponentsLookup.Attack;
        var component = (Battle.Logic.Thing.Component.Property.AttackComponent)CreateComponent(index, typeof(Battle.Logic.Thing.Component.Property.AttackComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttack(vFrame.Lockstep.Core.FixedPoint newValue) {
        var index = LogicThingComponentsLookup.Attack;
        var component = (Battle.Logic.Thing.Component.Property.AttackComponent)CreateComponent(index, typeof(Battle.Logic.Thing.Component.Property.AttackComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttack() {
        RemoveComponent(LogicThingComponentsLookup.Attack);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicThingMatcher {

    static Entitas.IMatcher<LogicThingEntity> _matcherAttack;

    public static Entitas.IMatcher<LogicThingEntity> Attack {
        get {
            if (_matcherAttack == null) {
                var matcher = (Entitas.Matcher<LogicThingEntity>)Entitas.Matcher<LogicThingEntity>.AllOf(LogicThingComponentsLookup.Attack);
                matcher.componentNames = LogicThingComponentsLookup.componentNames;
                _matcherAttack = matcher;
            }

            return _matcherAttack;
        }
    }
}
