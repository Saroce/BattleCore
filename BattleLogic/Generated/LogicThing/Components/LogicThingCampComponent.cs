//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicThingEntity {

    public Battle.Logic.Thing.Component.Property.Base.CampComponent camp { get { return (Battle.Logic.Thing.Component.Property.Base.CampComponent)GetComponent(LogicThingComponentsLookup.Camp); } }
    public bool hasCamp { get { return HasComponent(LogicThingComponentsLookup.Camp); } }

    public void AddCamp(Battle.Common.Constant.CampFlag newValue) {
        var index = LogicThingComponentsLookup.Camp;
        var component = (Battle.Logic.Thing.Component.Property.Base.CampComponent)CreateComponent(index, typeof(Battle.Logic.Thing.Component.Property.Base.CampComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCamp(Battle.Common.Constant.CampFlag newValue) {
        var index = LogicThingComponentsLookup.Camp;
        var component = (Battle.Logic.Thing.Component.Property.Base.CampComponent)CreateComponent(index, typeof(Battle.Logic.Thing.Component.Property.Base.CampComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCamp() {
        RemoveComponent(LogicThingComponentsLookup.Camp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicThingMatcher {

    static Entitas.IMatcher<LogicThingEntity> _matcherCamp;

    public static Entitas.IMatcher<LogicThingEntity> Camp {
        get {
            if (_matcherCamp == null) {
                var matcher = (Entitas.Matcher<LogicThingEntity>)Entitas.Matcher<LogicThingEntity>.AllOf(LogicThingComponentsLookup.Camp);
                matcher.componentNames = LogicThingComponentsLookup.componentNames;
                _matcherCamp = matcher;
            }

            return _matcherCamp;
        }
    }
}
