// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FriendshipConf_Talk.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ExcelConvert.Auto.FriendshipConf {

  /// <summary>Holder for reflection information generated from FriendshipConf_Talk.proto</summary>
  public static partial class FriendshipConfTalkReflection {

    #region Descriptor
    /// <summary>File descriptor for FriendshipConf_Talk.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendshipConfTalkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlGcmllbmRzaGlwQ29uZl9UYWxrLnByb3RvEgtYbHN4Q29udmVydCJmChpG",
            "cmllbmRzaGlwQ29uZl9UYWxrX1JlY29yZBIOCgZUYWxrSWQYASABKAUSEQoJ",
            "R2VuZXJhbElkGAIgASgFEhAKCFRhbGtUeXBlGAMgASgFEhMKC1RhbGtBdWRp",
            "b0lkGAQgASgFIk8KE0ZyaWVuZHNoaXBDb25mX1RhbGsSOAoHcmVjb3JkcxgB",
            "IAMoCzInLlhsc3hDb252ZXJ0LkZyaWVuZHNoaXBDb25mX1RhbGtfUmVjb3Jk",
            "QiOqAiBFeGNlbENvbnZlcnQuQXV0by5GcmllbmRzaGlwQ29uZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record), global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record.Parser, new[]{ "TalkId", "GeneralId", "TalkType", "TalkAudioId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk), global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk.Parser, new[]{ "Records" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FriendshipConf_Talk_Record : pb::IMessage<FriendshipConf_Talk_Record> {
    private static readonly pb::MessageParser<FriendshipConf_Talk_Record> _parser = new pb::MessageParser<FriendshipConf_Talk_Record>(() => new FriendshipConf_Talk_Record());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendshipConf_Talk_Record> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExcelConvert.Auto.FriendshipConf.FriendshipConfTalkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipConf_Talk_Record() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipConf_Talk_Record(FriendshipConf_Talk_Record other) : this() {
      talkId_ = other.talkId_;
      generalId_ = other.generalId_;
      talkType_ = other.talkType_;
      talkAudioId_ = other.talkAudioId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipConf_Talk_Record Clone() {
      return new FriendshipConf_Talk_Record(this);
    }

    /// <summary>Field number for the "TalkId" field.</summary>
    public const int TalkIdFieldNumber = 1;
    private int talkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TalkId {
      get { return talkId_; }
      set {
        talkId_ = value;
      }
    }

    /// <summary>Field number for the "GeneralId" field.</summary>
    public const int GeneralIdFieldNumber = 2;
    private int generalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GeneralId {
      get { return generalId_; }
      set {
        generalId_ = value;
      }
    }

    /// <summary>Field number for the "TalkType" field.</summary>
    public const int TalkTypeFieldNumber = 3;
    private int talkType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TalkType {
      get { return talkType_; }
      set {
        talkType_ = value;
      }
    }

    /// <summary>Field number for the "TalkAudioId" field.</summary>
    public const int TalkAudioIdFieldNumber = 4;
    private int talkAudioId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TalkAudioId {
      get { return talkAudioId_; }
      set {
        talkAudioId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendshipConf_Talk_Record);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendshipConf_Talk_Record other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkId != other.TalkId) return false;
      if (GeneralId != other.GeneralId) return false;
      if (TalkType != other.TalkType) return false;
      if (TalkAudioId != other.TalkAudioId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkId != 0) hash ^= TalkId.GetHashCode();
      if (GeneralId != 0) hash ^= GeneralId.GetHashCode();
      if (TalkType != 0) hash ^= TalkType.GetHashCode();
      if (TalkAudioId != 0) hash ^= TalkAudioId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TalkId);
      }
      if (GeneralId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GeneralId);
      }
      if (TalkType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TalkType);
      }
      if (TalkAudioId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TalkAudioId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TalkId);
      }
      if (GeneralId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GeneralId);
      }
      if (TalkType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TalkType);
      }
      if (TalkAudioId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TalkAudioId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendshipConf_Talk_Record other) {
      if (other == null) {
        return;
      }
      if (other.TalkId != 0) {
        TalkId = other.TalkId;
      }
      if (other.GeneralId != 0) {
        GeneralId = other.GeneralId;
      }
      if (other.TalkType != 0) {
        TalkType = other.TalkType;
      }
      if (other.TalkAudioId != 0) {
        TalkAudioId = other.TalkAudioId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TalkId = input.ReadInt32();
            break;
          }
          case 16: {
            GeneralId = input.ReadInt32();
            break;
          }
          case 24: {
            TalkType = input.ReadInt32();
            break;
          }
          case 32: {
            TalkAudioId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendshipConf_Talk : pb::IMessage<FriendshipConf_Talk> {
    private static readonly pb::MessageParser<FriendshipConf_Talk> _parser = new pb::MessageParser<FriendshipConf_Talk>(() => new FriendshipConf_Talk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendshipConf_Talk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExcelConvert.Auto.FriendshipConf.FriendshipConfTalkReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipConf_Talk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipConf_Talk(FriendshipConf_Talk other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendshipConf_Talk Clone() {
      return new FriendshipConf_Talk(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record.Parser);
    private readonly pbc::RepeatedField<global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record> records_ = new pbc::RepeatedField<global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ExcelConvert.Auto.FriendshipConf.FriendshipConf_Talk_Record> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendshipConf_Talk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendshipConf_Talk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendshipConf_Talk other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
