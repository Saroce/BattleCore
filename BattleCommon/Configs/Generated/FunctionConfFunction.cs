// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FunctionConf_Function.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ExcelConvert.Auto.FunctionConf {

  /// <summary>Holder for reflection information generated from FunctionConf_Function.proto</summary>
  public static partial class FunctionConfFunctionReflection {

    #region Descriptor
    /// <summary>File descriptor for FunctionConf_Function.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FunctionConfFunctionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtGdW5jdGlvbkNvbmZfRnVuY3Rpb24ucHJvdG8SC1hsc3hDb252ZXJ0Ik0K",
            "HEZ1bmN0aW9uQ29uZl9GdW5jdGlvbl9SZWNvcmQSEgoKRnVuY3Rpb25JZBgB",
            "IAEoBRIZChFGdW5jdGlvblBhcmFtZXRlchgCIAEoCSJTChVGdW5jdGlvbkNv",
            "bmZfRnVuY3Rpb24SOgoHcmVjb3JkcxgBIAMoCzIpLlhsc3hDb252ZXJ0LkZ1",
            "bmN0aW9uQ29uZl9GdW5jdGlvbl9SZWNvcmRCIaoCHkV4Y2VsQ29udmVydC5B",
            "dXRvLkZ1bmN0aW9uQ29uZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record), global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record.Parser, new[]{ "FunctionId", "FunctionParameter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function), global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function.Parser, new[]{ "Records" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FunctionConf_Function_Record : pb::IMessage<FunctionConf_Function_Record> {
    private static readonly pb::MessageParser<FunctionConf_Function_Record> _parser = new pb::MessageParser<FunctionConf_Function_Record>(() => new FunctionConf_Function_Record());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionConf_Function_Record> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExcelConvert.Auto.FunctionConf.FunctionConfFunctionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionConf_Function_Record() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionConf_Function_Record(FunctionConf_Function_Record other) : this() {
      functionId_ = other.functionId_;
      functionParameter_ = other.functionParameter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionConf_Function_Record Clone() {
      return new FunctionConf_Function_Record(this);
    }

    /// <summary>Field number for the "FunctionId" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private int functionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FunctionId {
      get { return functionId_; }
      set {
        functionId_ = value;
      }
    }

    /// <summary>Field number for the "FunctionParameter" field.</summary>
    public const int FunctionParameterFieldNumber = 2;
    private string functionParameter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionParameter {
      get { return functionParameter_; }
      set {
        functionParameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionConf_Function_Record);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionConf_Function_Record other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      if (FunctionParameter != other.FunctionParameter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId != 0) hash ^= FunctionId.GetHashCode();
      if (FunctionParameter.Length != 0) hash ^= FunctionParameter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FunctionId);
      }
      if (FunctionParameter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FunctionParameter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FunctionId);
      }
      if (FunctionParameter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionParameter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionConf_Function_Record other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId != 0) {
        FunctionId = other.FunctionId;
      }
      if (other.FunctionParameter.Length != 0) {
        FunctionParameter = other.FunctionParameter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FunctionId = input.ReadInt32();
            break;
          }
          case 18: {
            FunctionParameter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FunctionConf_Function : pb::IMessage<FunctionConf_Function> {
    private static readonly pb::MessageParser<FunctionConf_Function> _parser = new pb::MessageParser<FunctionConf_Function>(() => new FunctionConf_Function());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionConf_Function> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExcelConvert.Auto.FunctionConf.FunctionConfFunctionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionConf_Function() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionConf_Function(FunctionConf_Function other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionConf_Function Clone() {
      return new FunctionConf_Function(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record.Parser);
    private readonly pbc::RepeatedField<global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record> records_ = new pbc::RepeatedField<global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ExcelConvert.Auto.FunctionConf.FunctionConf_Function_Record> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionConf_Function);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionConf_Function other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionConf_Function other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
